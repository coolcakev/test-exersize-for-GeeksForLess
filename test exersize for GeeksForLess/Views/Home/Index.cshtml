@model test_exersize_for_GeeksForLess.Models.HomeModels.HomeIndexModel
@{
    ViewData["Title"] = "Home Page";
    var checkForAuthenthification = User.Identity.IsAuthenticated;
}

<div id="PlaceForTopic" class="text-center">
    @foreach (var topic in Model.Topics)
    {

        <article>
            <div class="info">
                <a class="author">
                    @topic.User.UserLogin
                </a>
                <time class="date">@topic.CreationDate.ToString("dd MMMM yyyy")</time>
            </div>

            <h2>
                <a style="text-decoration: none;" href="@Url.Action("Index","Topic",new { topicId=topic.Id})">@topic.Title</a>
                <div class="g-comments-round">
                    <div style="display: flex;align-content: center;justify-content: center;">
                        <span>@topic.Posts.Count()</span>
                    </div>
                </div>
            </h2>

        </article>

    }
</div>
@if (checkForAuthenthification)
{
    <div id="CreateTopic" class="topic-form">
        <div class="form-group">
            <label for="registerLogin">Title</label>
            <input class="form-control" id="Title" placeholder="Title" style=" display: block; width: 100%;" type="text" oninput="clearValid(this)" />
            <div class="invalid-feedback" style="display:block">
            </div>
        </div>
        <div class="form-group">
            <label for="registerLogin">Body</label>
            <textarea class="form-control" id="Body" style="width:100%;" placeholder="Body" oninput="clearValid(this)"></textarea>
            <div class="invalid-feedback" style="display:block">
            </div>
        </div>

        <div style="display: flex; flex-direction: row-reverse;">
            <button type="button" class="btn btn-primary" onclick="createTopic()">Create</button>
        </div>
    </div>
}

<script>
    function createTopicElement(topic, currentUrlTopic, creationDate) {
        let userName = document.getElementById("UserName").value;
        let placeForElement = document.getElementById("PlaceForTopic");
        let topicElement = document.createElement("div")

        let templateForContentOfTopic=`  <article>
            <div class="info">
                <a class="author">
                    ${userName}
                </a>
                <time class="date">${creationDate}</time>
            </div>

            <h2>
                <a style="text-decoration: none;" href="${currentUrlTopic}">${topic.title}</a>
                <div class="g-comments-round">
                    <div style="display: flex;align-content: center;justify-content: center;">
                        <span>0</span>
                    </div>
                </div>
            </h2>

        </article>`
        topicElement.innerHTML = templateForContentOfTopic
        placeForElement.appendChild(topicElement)
    }
    function createTopic() {
        let title = document.getElementById("Title");
        let body = document.getElementById("Body");

        validateTopic(title, body);

        let dialogModel = "CreateTopic";
        let idInputs = getIdInput(dialogModel);

        var functionSome = Array.prototype.some;
        var isCorrect = functionSome.call(idInputs, function (item) {
            let element = document.getElementById(item);
            return element.classList.contains("is-invalid");
        });

        if (isCorrect)
            return;

        let model = {
            Title: title.value,
            Body: body.value
        }
        title.value = ""
        body.value = ""
        $.ajax({
            type: "POST",
            url: "/Topic/Create",
            data: JSON.stringify(model),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                createTopicElement(data.topic, data.currentUrlTopic, data.creationDate)
            },

        });
    }

</script>
